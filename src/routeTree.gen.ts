/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SubmitSurveyUrlImport } from './routes/submit/$surveyUrl'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create Virtual Routes

const NotFoundLazyImport = createFileRoute('/notFound')()
const SurveysSurveyIdIndexLazyImport = createFileRoute('/surveys/$surveyId/')()
const SurveysSurveyIdSuccessLazyImport = createFileRoute(
  '/surveys/$surveyId/success',
)()
const SurveysSurveyIdBuilderLazyImport = createFileRoute(
  '/surveys/$surveyId/builder',
)()

// Create/Update Routes

const NotFoundLazyRoute = NotFoundLazyImport.update({
  id: '/notFound',
  path: '/notFound',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notFound.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SubmitSurveyUrlRoute = SubmitSurveyUrlImport.update({
  id: '/submit/$surveyUrl',
  path: '/submit/$surveyUrl',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const SurveysSurveyIdIndexLazyRoute = SurveysSurveyIdIndexLazyImport.update({
  id: '/surveys/$surveyId/',
  path: '/surveys/$surveyId/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/surveys/$surveyId/index.lazy').then((d) => d.Route),
)

const SurveysSurveyIdSuccessLazyRoute = SurveysSurveyIdSuccessLazyImport.update(
  {
    id: '/surveys/$surveyId/success',
    path: '/surveys/$surveyId/success',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/surveys/$surveyId/success.lazy').then((d) => d.Route),
)

const SurveysSurveyIdBuilderLazyRoute = SurveysSurveyIdBuilderLazyImport.update(
  {
    id: '/surveys/$surveyId/builder',
    path: '/surveys/$surveyId/builder',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/surveys/$surveyId/builder.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/notFound': {
      id: '/notFound'
      path: '/notFound'
      fullPath: '/notFound'
      preLoaderRoute: typeof NotFoundLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/submit/$surveyUrl': {
      id: '/submit/$surveyUrl'
      path: '/submit/$surveyUrl'
      fullPath: '/submit/$surveyUrl'
      preLoaderRoute: typeof SubmitSurveyUrlImport
      parentRoute: typeof rootRoute
    }
    '/surveys/$surveyId/builder': {
      id: '/surveys/$surveyId/builder'
      path: '/surveys/$surveyId/builder'
      fullPath: '/surveys/$surveyId/builder'
      preLoaderRoute: typeof SurveysSurveyIdBuilderLazyImport
      parentRoute: typeof rootRoute
    }
    '/surveys/$surveyId/success': {
      id: '/surveys/$surveyId/success'
      path: '/surveys/$surveyId/success'
      fullPath: '/surveys/$surveyId/success'
      preLoaderRoute: typeof SurveysSurveyIdSuccessLazyImport
      parentRoute: typeof rootRoute
    }
    '/surveys/$surveyId/': {
      id: '/surveys/$surveyId/'
      path: '/surveys/$surveyId'
      fullPath: '/surveys/$surveyId'
      preLoaderRoute: typeof SurveysSurveyIdIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/notFound': typeof NotFoundLazyRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/submit/$surveyUrl': typeof SubmitSurveyUrlRoute
  '/surveys/$surveyId/builder': typeof SurveysSurveyIdBuilderLazyRoute
  '/surveys/$surveyId/success': typeof SurveysSurveyIdSuccessLazyRoute
  '/surveys/$surveyId': typeof SurveysSurveyIdIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/notFound': typeof NotFoundLazyRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/submit/$surveyUrl': typeof SubmitSurveyUrlRoute
  '/surveys/$surveyId/builder': typeof SurveysSurveyIdBuilderLazyRoute
  '/surveys/$surveyId/success': typeof SurveysSurveyIdSuccessLazyRoute
  '/surveys/$surveyId': typeof SurveysSurveyIdIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/notFound': typeof NotFoundLazyRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/submit/$surveyUrl': typeof SubmitSurveyUrlRoute
  '/surveys/$surveyId/builder': typeof SurveysSurveyIdBuilderLazyRoute
  '/surveys/$surveyId/success': typeof SurveysSurveyIdSuccessLazyRoute
  '/surveys/$surveyId/': typeof SurveysSurveyIdIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/notFound'
    | '/auth/login'
    | '/auth/signup'
    | '/submit/$surveyUrl'
    | '/surveys/$surveyId/builder'
    | '/surveys/$surveyId/success'
    | '/surveys/$surveyId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/notFound'
    | '/auth/login'
    | '/auth/signup'
    | '/submit/$surveyUrl'
    | '/surveys/$surveyId/builder'
    | '/surveys/$surveyId/success'
    | '/surveys/$surveyId'
  id:
    | '__root__'
    | '/'
    | '/notFound'
    | '/auth/login'
    | '/auth/signup'
    | '/submit/$surveyUrl'
    | '/surveys/$surveyId/builder'
    | '/surveys/$surveyId/success'
    | '/surveys/$surveyId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotFoundLazyRoute: typeof NotFoundLazyRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  SubmitSurveyUrlRoute: typeof SubmitSurveyUrlRoute
  SurveysSurveyIdBuilderLazyRoute: typeof SurveysSurveyIdBuilderLazyRoute
  SurveysSurveyIdSuccessLazyRoute: typeof SurveysSurveyIdSuccessLazyRoute
  SurveysSurveyIdIndexLazyRoute: typeof SurveysSurveyIdIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotFoundLazyRoute: NotFoundLazyRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  SubmitSurveyUrlRoute: SubmitSurveyUrlRoute,
  SurveysSurveyIdBuilderLazyRoute: SurveysSurveyIdBuilderLazyRoute,
  SurveysSurveyIdSuccessLazyRoute: SurveysSurveyIdSuccessLazyRoute,
  SurveysSurveyIdIndexLazyRoute: SurveysSurveyIdIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/notFound",
        "/auth/login",
        "/auth/signup",
        "/submit/$surveyUrl",
        "/surveys/$surveyId/builder",
        "/surveys/$surveyId/success",
        "/surveys/$surveyId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/notFound": {
      "filePath": "notFound.lazy.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/submit/$surveyUrl": {
      "filePath": "submit/$surveyUrl.tsx"
    },
    "/surveys/$surveyId/builder": {
      "filePath": "surveys/$surveyId/builder.lazy.tsx"
    },
    "/surveys/$surveyId/success": {
      "filePath": "surveys/$surveyId/success.lazy.tsx"
    },
    "/surveys/$surveyId/": {
      "filePath": "surveys/$surveyId/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
